CONNECTION FAILURE REMEDIATION

Prompt Type: Full Stack Repair | Deployment-Level | Replit Agent Optimized
Objective: Resolve MongoDB: Connection refused error on startup under Railway using ZIP-based code structure
Version: EKF-v1.0.6-MDBZIP-RW


---

🔧 PHASE 0 — ZIP SETUP & STRUCTURE SANITIZATION

Perform these actions in order:

1. Unzip the uploaded .zip from attached_assets

Move all contents to the root directory

Delete subfolders like /EmeraldKillfeed/, /bot/ if they duplicate structure

Flatten into /app or / if needed



2. Verify Project Structure

Confirm folders: cogs/, utils/, parsers/, assets/

Confirm presence of main entrypoint: main.py or equivalent



3. Set Secrets from Environment
Confirm these secrets are set via Railway:

BOT_TOKEN

MONGO_URI → Ensure this points to MongoDB Atlas, not localhost

> Example: mongodb+srv://username:pass@cluster.mongodb.net/mydb?retryWrites=true





4. Start Bot via Production Button

Do not proceed if the bot fails to start or the DB connection logs as Refused





---

🚨 PHASE 1 — MONGODB CONNECTION DIAGNOSIS & RESOLUTION

🔍 Current Error

Failed to connect to MongoDB: localhost:27017: [Errno 111] Connection refused

🛠 Fix Task List

[ ] Ensure all references to mongodb://localhost are removed

Search .env, config.py, db_manager.py, main.py

Replace with the proper MONGO_URI pulled from os.environ securely


[ ] Validate MongoDB client initialization

Confirm the client is built as:

import motor.motor_asyncio
mongo_client = motor.motor_asyncio.AsyncIOMotorClient(os.getenv("MONGO_URI"))

Add a test connection timeout of 10s:

await mongo_client.admin.command("ping")


[ ] Fail gracefully with detailed error logs

Replace vague logs with specific tips:

except Exception as e:
    logger.error(f"❌ MongoDB init failed: {e} - Check your MONGO_URI secret and IP whitelist in Atlas")


[ ] Ensure MongoDB Atlas is properly configured

Whitelist Railway IP range: 0.0.0.0/0 (temporarily for test)

Verify credentials in MONGO_URI




---

✅ PHASE 2 — VERIFY BOT FULL START & COG LOADING

[ ] All 11 cogs must load successfully

[ ] All commands must sync globally or via fallback to guild

[ ] Console must show:

✅ Bot logged in as Emeralds Killfeed
✅ Connected to N guilds
✅ Database connection successful
✅ All assets found
✅ Command registration complete



---

💡 BONUS FIXES

[ ] Replace datetime.utcnow() with:

from datetime import datetime, timezone
datetime.now(timezone.utc)

[ ] Remove any localhost references from:

Dockerfile (if present)

project.toml

.env.example




---

✅ COMPLETION CHECKLIST

[ ] MONGO_URI points to MongoDB Atlas, not localhost

[ ] No connection refused errors in logs

[ ] All cogs load and register commands

[ ] Bot outputs database success log on startup

[ ] Railway logs confirm full boot



---

📌 EXECUTION RULES

🔁 This is a single batch task — no checkpoints or output until everything works

🔒 Do not assume MongoDB is local — Atlas-only logic permitted

🔧 Use py-cord 2.6.1 only — no discord.py imports allowed

📊 All log changes must be visible in the Railway console

💥 Do not proceed if DB errors persist — halt and retry until verified working